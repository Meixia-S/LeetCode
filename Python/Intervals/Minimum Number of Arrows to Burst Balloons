class Solution:
    def findMinArrowShots(self, points: List[List[int]]) -> int:
        points.sort(key=lambda x: x[1])
        arrows = 1
        current_end = points[0][1]

        for i in range(1, len(points)):
            # If the current balloon starts after the end of the previous one, we need a new arrow
            if points[i][0] > current_end:
                print(current_end)
                arrows += 1
                current_end = points[i][1]

        return arrows

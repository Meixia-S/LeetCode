class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> ans = new ArrayList<>();
        if (root == null) {
            return ans;
        }

        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        while (!queue.isEmpty()) {
            List<Integer> level = new ArrayList<>();
            int qlen = queue.size();
            for (int i = 0; i < qlen; i ++) {
                TreeNode curr = queue.poll();
                if (curr != null) {
                    level.add(curr.val);

                    if (curr.left != null) {
                        queue.add(curr.left);
                    }
                    if (curr.right != null) {
                        queue.add(curr.right);
                    }
                }
            }
            if (level.size() < 2) {
                ans.add(level.get(0));
            } else {
                ans.add(level.get(level.size() - 1));
            }
        }
        return ans;
    }
}
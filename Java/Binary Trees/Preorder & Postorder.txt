class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {
        List<Integer> ans = new ArrayList<Integer>();
        if (root == null) {
            return ans;
        } else {
            recursive(root, ans);
            return ans;
        }
    }

    public void recursive(TreeNode root, List<Integer> ans) {
        if (root != null) {
            ans.add(root.val);         
            recursive(root.left, ans);
            recursive(root.right, ans);
        }
    }
}

_______________________________________________________________________
class Solution {
    public List<Integer> postorderTraversal(TreeNode root) {
        List<Integer> ans = new ArrayList<Integer>();
        if (root == null) {
            return ans;
        } else {
            recursive(root, ans);
            return ans;
        }
    }

    public void recursive(TreeNode root, List<Integer> ans) {
        if (root != null) {        
            recursive(root.left, ans);
            recursive(root.right, ans);
            ans.add(root.val);
        }
    }
}
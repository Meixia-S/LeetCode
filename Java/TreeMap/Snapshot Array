class SnapshotArray {
    TreeMap<Integer, Integer>[] Tm;
    int snap_id = 0;

    public SnapshotArray(int length) {
        Tm = new TreeMap[length];
        for (int i = 0; i < length; i++) {
            Tm[i] = new TreeMap<Integer, Integer>();
            Tm[i].put(0, 0);
        }
    }

    public void set(int index, int val) {
        Tm[index].put(snap_id, val);
    }

    public int snap() {
        return snap_id++;
    }

    public int get(int index, int snap_id) {
        return Tm[index].floorEntry(snap_id).getValue();
    }
}

/**
 * Your SnapshotArray object will be instantiated and called as such:
 * SnapshotArray obj = new SnapshotArray(length);
 * obj.set(index, val);
 * int param_2 = obj.snap();
 * int param_3 = obj.get(index, snap_id);
 */

// CODE WORKS BUT IS TOO SLOW:

// class SnapshotArray {
//     private int snapCount = 0;
//     private HashMap<Integer, String> snapArray = new HashMap<>();
//     private int[] array;

//     public SnapshotArray(int length) {
//         array = new int[length];
//     }
    
//     public void set(int index, int val) {
//         array[index] = val;
//     }
    
//     public int snap() {
//         StringBuilder diff = new StringBuilder(); // Use StringBuilder for efficiency
//         for (int i = 0; i < array.length; i++) {
//             diff.append(array[i]).append(",");
//         }

//         diff.setLength(diff.length() - 1);
//         snapArray.put(snapCount, diff.toString());
//         snapCount++;
//         return snapCount - 1;
//     }
    
//     public int get(int index, int snap_id) {
//         String[] stored = snapArray.get(snap_id).split(",");
//         return Integer.valueOf(stored[index]);
//     }
// }

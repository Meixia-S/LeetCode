class Solution {
    public int minDominoRotations(int[] tops, int[] bottoms) {
        int topRotation = helper(tops[0], tops, bottoms);
        int bottomRotation = helper(bottoms[0], tops, bottoms);

        if (topRotation != -1 && bottomRotation != -1) {
            return Math.min(topRotation, bottomRotation);
        }
        return Math.max(topRotation, bottomRotation);
    }

    private int helper(int num, int[] tops, int[] bottoms) {
        int top = 0;
        int bottom = 0;

        for (int i = 0; i < tops.length; i++) {
            if (tops[i] == num && bottoms[i] == num) {
                continue;
            } else if (bottoms[i] == num) {
                bottom++;
            } else if (tops[i] == num) {
                top++;
            } else {
                return -1;
            }
        }
        return Math.min(top, bottom);
    }
}

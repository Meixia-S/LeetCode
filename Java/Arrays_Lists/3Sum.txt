MY SOLUTION:

class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        Arrays.sort(nums);
        Set<List<Integer>> checker = new HashSet<>();

        for (int i = 0; i < nums.length; i ++) {
            int right = nums.length - 1;
            int left = i + 1;

            while (right > left) {
                int sum = nums[i] + nums[left] + nums[right];
                if (sum == 0) {
                    checker.add(Arrays.asList(nums[right], nums[left], nums[i]));
                    right --;
                    left ++;
                } else if (sum > 0) {
                    right --;
                } else {
                    left ++;
                }
            }
        }
        List<List<Integer>> ans = new ArrayList<>();
        ans.addAll(checker);
        return ans;
    }
}

___________________________________________________________________________________________
OTHER SOLUTION:

class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        Arrays.sort(nums);
        List<List<Integer>> ans = new ArrayList<>();
        Set<List<Integer>> set = new HashSet<>();

        for(int i = 0; i <nums.length; i++) {
            int j = i+1;
            int k = nums.length-1;

            while(j < k) {
                int sum = nums[i]+nums[j]+nums[k];
                if(sum == 0) {
                    set.add(Arrays.asList(nums[i], nums[j], nums[k]));
                    j++;
                    k--;
                } else if(sum < 0)
                    j++;
                else
                    k--;
            }
        }
        ans.addAll(set);
        return ans;
    }
}